
MONOPOLY
Scelte di programmazione

Per giocatore abbiamo adottato l'ereditarietÃ  in quanto ci sono due tipi di giocatori che hanno due comportamenti diversi in alcune funzionalitÃ 
(acquisto di terreni/case/alberghi).

Qualsiasi partita venga giocata essa ha la stessa struttura indipendentemente dal numero/varietÃ  di giocatori,
semplicemente quando viene incontrato un giocatore che Ã¨ umano si interagisce con quest'ultimo facendogli la domanda appropriata.
Quindi l'unica cosa che differenzia le partite Ã¨ il vector di giocatori:
1. vector con un GiocatoreUmano e tre GiocoatoreComputer;
2. vector con quattro GiocatoreComputer;

Note
Tenendo "20 fiorini" come quantitÃ  che ogni giocatore riceve ogni volta che passa per la partenza, nessun giocatore riesce a essere eliminato,
affinchÃ© succeda ciÃ² servirebbe un numero davvero molto elevato di turni.
Dunque conviene abbassare la quantitÃ  di fiorini da 20 a 1 o 2 cosÃ¬ che almeno un giocatore riesca a essere eliminato tenendo un numero ragionevole di turni.

Struttura del progetto

Il codice Ã¨ organizzato nelle seguenti directory:

ğŸ“¦ monopoly
â”£ğŸ“‚ include
â”ƒ â”£ ğŸ“œ Casella.h
â”ƒ â”£ ğŸ“œ Giocatore.h
â”ƒ â”£ ğŸ“œ GiocatoreComputer.h
â”ƒ â”£ ğŸ“œ GiocatoreUmano.h
â”ƒ â”£ ğŸ“œ LogManager.h
â”ƒ â”£ ğŸ“œ Partita.h
â”ƒ â”£ ğŸ“œ Tabellone.h
â”£ğŸ“‚ src
â”ƒ â”£ ğŸ“œ Casella.cpp
â”ƒ â”£ ğŸ“œ Giocatore.cpp
â”ƒ â”£ ğŸ“œ GiocatoreComputer.cpp
â”ƒ â”£ ğŸ“œ GiocatoreUmano.cpp
â”ƒ â”£ ğŸ“œ Partita.cpp
â”ƒ â”£ ğŸ“œ Tabellone.cpp
â”£ğŸ“œ main.cpp
â”£ğŸ“œ CMakeLists.txt
â”£ğŸ“œ README.md
â”£ğŸ“œ README.txt
